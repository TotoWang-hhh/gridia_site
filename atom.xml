<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://totowang-hhh.github.io</id>
    <title>人工智障</title>
    <updated>2020-08-16T12:16:33.099Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://totowang-hhh.github.io"/>
    <link rel="self" href="https://totowang-hhh.github.io/atom.xml"/>
    <subtitle>个人博客</subtitle>
    <logo>https://totowang-hhh.github.io/images/avatar.png</logo>
    <icon>https://totowang-hhh.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 人工智障</rights>
    <entry>
        <title type="html"><![CDATA[音乐下载器]]></title>
        <id>https://totowang-hhh.github.io/post/music_down/</id>
        <link href="https://totowang-hhh.github.io/post/music_down/">
        </link>
        <updated>2020-08-16T10:58:51.000Z</updated>
        <content type="html"><![CDATA[<h1 id="优化后亲测可用免费下载qq音乐大部分资源">优化后亲测可用！免费下载QQ音乐大部分资源</h1>
<hr>
<p>眼看着网上许多下歌的插件用不了了，又不想买VIP，便非常着急。<br>
突然我想到了接口这玩意儿，于是我······<br>
<img src="https://img-blog.csdnimg.cn/20200530114833205.png" alt="在这里插入图片描述" loading="lazy"><br>
奥我真是个人才！<br>
突然我看见了某人写过的代码，发现部分功能已经失效了，就修复了一下。</p>
<h2 id="版权问题反正你们也不会看的">版权问题（反正你们也不会看的）</h2>
<p>这玩意儿已经被驳回了，<s>被迫加上这些累赘</s> ······应该不会再有问题了。<br>
原网页没有任何版权保护。<br>
关于音乐，你们最好去支持正版。<s>不然我一拳揍死你</s><br>
<strong>好吧如果这还能有问题我只能CV大法了</strong><br>
本工具只用作个人学习研究，禁止用于商业及非法用途，如产生法律纠纷与本人无关。如果需要保存音乐，请自行去各个网站下载正版。<br>
[TOC]</p>
<h2 id="正在完成的更改">正在完成的更改</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8101986"><label class="task-list-item-label" for="task-item-8101986"> 修复BUG</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-1747741"><label class="task-list-item-label" for="task-item-1747741"> 调整路径</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9740492"><label class="task-list-item-label" for="task-item-9740492"> 脱离黑底白字（可视化界面）</label></li>
</ul>
<h2 id="上代码">上代码</h2>
<pre><code class="language-python">#-*- coding:utf-8 -*-# author:**ZLH**
# datetime:2019/8/2 16:47
# software: PyCharm
 
import requests
import json
import easygui

headers = {
    'Host': 'c.y.qq.com',
    'Referer': 'http://c.y.qq.com/',
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 '
    'Safari/537.36 '
}
def douqq_post(mid):
        &quot;&quot;&quot;
    返回歌曲下载url
    :param mid:歌曲mid
    :return: 字典
    &quot;&quot;&quot;
        post_url = 'http://www.douqq.com/qqmusic/qqapi.php'
        data = {'mid': mid}
        res = requests.post(post_url, data=data)
        get_json = json.loads(res.text)
        return eval(get_json)
 
 
def download_file(src, file_path):
        &quot;&quot;&quot;
    歌曲下载
    :param src: 下载链接
    :param file_path: 存储路径
    :return: 文件路径
    &quot;&quot;&quot;
        r = requests.get(src, stream=True)
        f = open(file_path, &quot;wb&quot;)
        for chunk in r.iter_content(chunk_size=512):
            if chunk:
                f.write(chunk)
        return file_path
 
def choice_download(dic):
        src = dic['m4a']
        postfix = '.m4a'
        return postfix, src.replace('\/\/', '//').replace('\/', '/')
 
def find_song(word):
        &quot;&quot;&quot;
    查找歌曲
    :param word: 歌曲名
    :return: 返回歌曲mid
    &quot;&quot;&quot;
        get_url = 'https://c.y.qq.com/soso/fcgi-bin/client_search_cp?&amp;t=0&amp;aggr=1&amp;cr=1&amp;catZhida=1&amp;lossless=0&amp;flag_qc=0&amp;p=1&amp;n' \
        '=20&amp;w=' + word
        try:
            res1 = requests.get(get_url, headers=headers)
            get_json = json.loads(res1.text.strip('callback()[]'))
            jsons = get_json['data']['song']['list']
            songmid = []
            media_mid = []
            song_singer = []
            i = 1
            for song in jsons:
                # print(i, ':' + song['songname'], '---', song['singer'][0]['name'], song['songmid'], song['media_mid'])
                print(i, ':' + song['songname'], '---', song['singer'][0]['name'])
                songmid.append(song['songmid'])
                media_mid.append(song['media_mid'])
                song_singer.append(song['singer'][0]['name'])
                i = i + 1
            select = int(input(&quot;请输入您的选择:&quot;)) - 1
            return songmid[select], song_singer[select]
        except Exception as e:
            print(f'歌曲查找有误：{e}')
            return None
 
 
if __name__ == '__main__':
# songname = '叹云兮'
    while True:
        songname = input(&quot;请输入音乐名称:&quot;)
        song_mid, singer = find_song(songname)
        dic = douqq_post(song_mid)
        # {
        # &quot;mid&quot;:&quot;004FjJo32TISsY&quot;,
        # &quot;m4a&quot;:&quot;http:\/\/dl.stream.qqmusic.qq.com\/C400004FjJo32TISsY.m4a?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=38&quot;,
        # &quot;mp3_l&quot;:&quot;http:\/\/dl.stream.qqmusic.qq.com\/M500004FjJo32TISsY.mp3?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=53&quot;,
        # &quot;mp3_h&quot;:media_mid&quot;http:\/\/dl.stream.qqmusic.qq.com\/M800004FjJo32TISsY.mp3?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=53&quot;,
        # &quot;ape&quot;:&quot;http:\/\/dl.stream.qqmusic.qq.com\/A000004FjJo32TISsY.ape?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=53&quot;,
        # &quot;flac&quot;:&quot;http:\/\/dl.stream.qqmusic.qq.com\/F000004FjJo32TISsY.flac?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=53&quot;,
        # &quot;pic&quot;:&quot;https:\/\/y.gtimg.cn\/music\/photo_new\/T002R300x300M000003NZyTh4eMMsp.jpg?max_age=2592000&quot;
        # }
        # print('mid:'+dic['mid'])
        postfix, url = choice_download(dic)
        save_path = easygui.filesavebox(title='保存文件')
        download_file(url, save_path + postfix)
        con = input('是否重启程序以下载另一首音乐: y/n ')
        if con == 'n':
            break
</code></pre>
<p>原版来自吾爱破解论坛，这里修改了一些内容（详见“修改内容”）。<br>
<a href="https://www.52pojie.cn/thread-1008496-1-1.html">原版链接</a></p>
<h2 id="修改内容">修改内容</h2>
<ul>
<li>删除失效部分</li>
<li>添加路径选择功能（文件路径选择窗口哦！）</li>
<li>对部分位置进行汉化</li>
<li>添加可视化界面</li>
</ul>
<h2 id="原网页上也有人修复过">原网页上也有人修复过</h2>
<pre><code class="language-python">import os

import requests
import json

headers = {
    'Host': 'c.y.qq.com',
    'Referer': 'http://c.y.qq.com/',
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 '
                  'Safari/537.36 '
}


def douqq_post(mid):
    &quot;&quot;&quot;
返回歌曲下载url
:param mid:歌曲mid
:return: 字典
&quot;&quot;&quot;
    post_url = 'http://www.douqq.com/qqmusic/qqapi.php'
    data = {'mid': mid}
    res = requests.post(post_url, data=data)
    get_json = json.loads(res.text)
    return eval(get_json)


def download_file(src, file_path):
    &quot;&quot;&quot;
歌曲下载
:param src: 下载链接
:param file_path: 存储路径
:return: 文件路径
&quot;&quot;&quot;
    r = requests.get(src, stream=True)
    f = open(file_path, &quot;wb&quot;)
    for chunk in r.iter_content(chunk_size=512):
        if chunk:
            f.write(chunk)
    return file_path


def choice_download(dic):
    print('1. m4a视频')
    print('2. mp3普通品质')
    print('3. mp3高品质')
    print('4. ape高品无损')
    print('5. flac无损音频')
    select = int(input(&quot;请选择需要下载的音乐音质:&quot;))
    src = ''
    postfix = ''
    if select == 1:
        src = dic['m4a']
        postfix = '.m4a'
    if select == 2:
        src = dic['mp3_l']
        postfix = '.mp3'
    if select == 3:
        src = dic['mp3_h']
        postfix = '.mp3'
    if select == 4:
        src = dic['ape']
        postfix = '.ape'
    if select == 5:
        src = dic['flac']
        postfix = '.flac'
    return postfix, src.replace('\/\/', '//').replace('\/', '/')


def find_song(word):
    &quot;&quot;&quot;
查找歌曲
:param word: 歌曲名
:return: 返回歌曲mid
&quot;&quot;&quot;
    get_url = 'https://c.y.qq.com/soso/fcgi-bin/client_search_cp?&amp;t=0&amp;aggr=1&amp;cr=1&amp;catZhida=1&amp;lossless=0&amp;flag_qc=0&amp;p=1&amp;n' \
              '=20&amp;w=' + word
    try:
        res1 = requests.get(get_url, headers=headers)
        get_json = json.loads(res1.text.strip('callback()[]'))
        jsons = get_json['data']['song']['list']
        songmid = []
        media_mid = []
        song_singer = []
        i = 1
        for song in jsons:
            # 特殊情况下搜索条件会为空，测试的时候报错了几次跳过即可
            if song['albumid'] == 0:
                continue
            print(i, ':' + song['songname'], '---', song['singer'][0]['name'])
            songmid.append(song['songmid'])
            media_mid.append(song['media_mid'])
            song_singer.append(song['singer'][0]['name'])
            i = i + 1
        select = int(input(&quot;请输入您的选择:&quot;)) - 1
        return songmid[select], song_singer[select], jsons[select]['albumname']
    except Exception as e:
        print(f'歌曲查找有误：{e}')
        return None


if __name__ == '__main__':
    while True:
        songname = input(&quot;请输入需要下载的音乐的名字:&quot;)
        song_mid, singer,songname = find_song(songname)
        dic = douqq_post(song_mid)
        postfix, url = choice_download(dic)
        save_path = &quot;D:\\Music\\&quot;
        # 判断文件夹是否存在，不存在则创建文件夹
        if not os.path.exists(save_path):
            # 不存在则创建
            os.makedirs(save_path)
        download_file(url, save_path + songname + ' - ' + singer + postfix)
        print('下载完成啦，自动保存在D盘的Music文件夹下面', end='\n')
        print('是否继续下载？: y/n', end='\n')
        con = input()
        if con == 'n':
            print('结束')
            break
</code></pre>
<blockquote>
<p>修复了两个使用的时候出现的BUG，可能还不完善求大佬改良1、修改搜索部分歌名会报错NoneType' object is not iterabl的问题 详情见89行注释2、修复文件夹不存在报错问题，目前解决方法如不存在则自动在D盘路径下创建一个Music文件夹[/mw_shl_code]3、另修改了一下下载后保存文件名为自己输入的名字而不是原本音乐名字的BUG 详情见98行</p>
</blockquote>
<p>——Protoss_krz 发表于 2019-11-21 10:00<br>
以上代码会询问下载格式，请选择1（“M4A视频”），放心吧，不是视频，估计是作者敲错了。另外，其他格式下下来听不了。<br>
也欢迎你在评论区贡献完美的代码。</p>
<h2 id="原版代码">原版代码</h2>
<pre><code class="language-python">#-*- coding:utf-8 -*-# author:**ZLH**
# datetime:2019/8/2 16:47
# software: PyCharm
 
import requests
import json
headers = {
    'Host': 'c.y.qq.com',
    'Referer': 'http://c.y.qq.com/',
    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 '
    'Safari/537.36 '
}
def douqq_post(mid):
        &quot;&quot;&quot;
    返回歌曲下载url
    :param mid:歌曲mid
    :return: 字典
    &quot;&quot;&quot;
        post_url = 'http://www.douqq.com/qqmusic/qqapi.php'
        data = {'mid': mid}
        res = requests.post(post_url, data=data)
        get_json = json.loads(res.text)
        return eval(get_json)
 
 
def download_file(src, file_path):
        &quot;&quot;&quot;
    歌曲下载
    :param src: 下载链接
    :param file_path: 存储路径
    :return: 文件路径
    &quot;&quot;&quot;
        r = requests.get(src, stream=True)
        f = open(file_path, &quot;wb&quot;)
        for chunk in r.iter_content(chunk_size=512):
            if chunk:
                f.write(chunk)
        return file_path
 
def choice_download(dic):
        print('1. m4a视频')
        print('2. mp3普通品质')
        print('3. mp3高品质')
        print('4. ape高品无损')
        print('5. flac无损音频')
        select = int(input(&quot;请输入您的选择:&quot;))
        src = ''
        postfix = ''
        if select == 1:
            src = dic['m4a']
            postfix = '.m4a'
        if select == 2:
            src = dic['mp3_l']
            postfix = '.mp3'
        if select == 3:
            src = dic['mp3_h']
            postfix = '.mp3'
        if select == 4:
            src = dic['ape']
            postfix = '.ape'
        if select == 5:
            src = dic['flac']
            postfix = '.flac'
        return postfix, src.replace('\/\/', '//').replace('\/', '/')
 
def find_song(word):
        &quot;&quot;&quot;
    查找歌曲
    :param word: 歌曲名
    :return: 返回歌曲mid
    &quot;&quot;&quot;
        get_url = 'https://c.y.qq.com/soso/fcgi-bin/client_search_cp?&amp;t=0&amp;aggr=1&amp;cr=1&amp;catZhida=1&amp;lossless=0&amp;flag_qc=0&amp;p=1&amp;n' \
        '=20&amp;w=' + word
        try:
            res1 = requests.get(get_url, headers=headers)
            get_json = json.loads(res1.text.strip('callback()[]'))
            jsons = get_json['data']['song']['list']
            songmid = []
            media_mid = []
            song_singer = []
            i = 1
            for song in jsons:
                # print(i, ':' + song['songname'], '---', song['singer'][0]['name'], song['songmid'], song['media_mid'])
                print(i, ':' + song['songname'], '---', song['singer'][0]['name'])
                songmid.append(song['songmid'])
                media_mid.append(song['media_mid'])
                song_singer.append(song['singer'][0]['name'])
                i = i + 1
            select = int(input(&quot;请输入您的选择:&quot;)) - 1
            return songmid[select], song_singer[select]
        except Exception as e:
            print(f'歌曲查找有误：{e}')
            return None
 
 
if __name__ == '__main__':
# songname = '叹云兮'
    while True:
        songname = input(&quot;Please input the music name:&quot;)
        song_mid, singer = find_song(songname)
        dic = douqq_post(song_mid)
        # {
        # &quot;mid&quot;:&quot;004FjJo32TISsY&quot;,
        # &quot;m4a&quot;:&quot;http:\/\/dl.stream.qqmusic.qq.com\/C400004FjJo32TISsY.m4a?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=38&quot;,
        # &quot;mp3_l&quot;:&quot;http:\/\/dl.stream.qqmusic.qq.com\/M500004FjJo32TISsY.mp3?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=53&quot;,
        # &quot;mp3_h&quot;:media_mid&quot;http:\/\/dl.stream.qqmusic.qq.com\/M800004FjJo32TISsY.mp3?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=53&quot;,
        # &quot;ape&quot;:&quot;http:\/\/dl.stream.qqmusic.qq.com\/A000004FjJo32TISsY.ape?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=53&quot;,
        # &quot;flac&quot;:&quot;http:\/\/dl.stream.qqmusic.qq.com\/F000004FjJo32TISsY.flac?guid=2095717240&amp;vkey=0B599CA74745F8A27A33A1FED2C7F6925FFFE8ED040569FB3540EB011FE9C5A3D7F36EAE4BDBD450F25076A23EBAF95A5ECB54B22C5E8F10&amp;uin=0&amp;fromtag=53&quot;,
        # &quot;pic&quot;:&quot;https:\/\/y.gtimg.cn\/music\/photo_new\/T002R300x300M000003NZyTh4eMMsp.jpg?max_age=2592000&quot;
        # }
        # print('mid:'+dic['mid'])
        postfix, url = choice_download(dic)
        save_path = &quot;D:\\Music\\&quot;
        download_file(url, save_path + songname + ' - ' + singer + postfix)
        con = input('Download success or not continue: y/n')
        if con == 'n':
            break
</code></pre>
<h2 id="下载">下载</h2>
<p>代码在上面，自己复制，没有EXE，Pyinstaller没法打包，在想办法。<br>
下载链接提供一键安装库功能。请自己下载<br>
诚通网盘<br>
https://n802.com/dir/27256477-39300593-4f1b29</p>
<h2 id="20200602-追">2020/06/02 追</h2>
<p>好吧······我竟然才发现：<br>
我参考了吾爱破解论坛的一个帖子，但原文写道</p>
<blockquote>
<p>首先这个帖子的代码大不部分是参考@珍珠奶茶丶板牙的，我当时下载的他的源码。<br>
然后用着不是特别方便，就自己改良了一下下，然后又打包成无需环境的exe程序，让我朋友们使用。</p>
</blockquote>
<p>原文给了作者参考的文章地址，我进去看了看······发现</p>
<blockquote>
<p>下午闲着无聊，看到了@丸子吃枣药丸 他发的文章， API采用QQMusic，我将Python 实现了他的功能，更方便大家下载</p>
</blockquote>
<p>我是真的无语了······</p>
<p><a href="https://blog.csdn.net/tt68686/article/details/106439303">转自我的CSDN</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第一篇博客]]></title>
        <id>https://totowang-hhh.github.io/post/first_post/</id>
        <link href="https://totowang-hhh.github.io/post/first_post/">
        </link>
        <updated>2020-08-16T04:13:50.000Z</updated>
        <content type="html"><![CDATA[<p>这是我再个人博客上发的第一篇博客<br>
感觉好有成就感！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://totowang-hhh.github.io/post/hello-gridea/</id>
        <link href="https://totowang-hhh.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>